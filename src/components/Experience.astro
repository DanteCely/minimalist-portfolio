---
import Badges from '@components/Badges.astro';
import Description from '@components/Description.astro';
import Duration from '@components/Duration.astro';
import type { Badge } from '@components/Badges.astro';
import type { Props as DescriptionProps } from '@components/Description.astro';
import type { Props as DurationProps } from '@components/Duration.astro';
import Initiative from '@components/Initiative.astro';
import type { Props as InitiativeProps } from '@components/Initiative.astro';

type Organization = {
	name: string;
	badges?: Badge[];
	duration?: DurationProps;
};

export interface Props {
	organization: Organization;
	role?: string;
	description?: DescriptionProps;
	initiatives?: InitiativeProps[];
	printPageBreak: boolean;
}

const { organization, role, description = {}, initiatives = [], printPageBreak } = Astro.props;
const { name, badges, duration } = organization;
---

{printPageBreak && <div class="pagebreak" />}
<header>
	<section>
		<h3>{name}</h3>
		{!!badges?.length && <Badges badges={badges} />}
	</section>
	{!!duration && <Duration {...duration} />}
</header>
<main>
	{!!role && <h4>{role}</h4>}
	{!!Object.keys(description).length && <Description {...description} />}
	{!!initiatives?.length && initiatives.map((initiative) => <Initiative {...initiative} />)}
</main>

<style lang="scss">
	@use '@scss/index' as *;

	h3 {
		font-weight: bold;
		font-size: 1.2rem;
	}

	h4 {
		font-weight: 600;
		font-size: 0.9rem;
	}

	header {
		display: flex;
		justify-content: space-between;

		@media (width <= 700px) {
			flex-direction: column;
		}

		section {
			display: inline-flex;
			gap: 0.5rem;
		}
	}
</style>
